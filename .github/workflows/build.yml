name: Build and release

on:
  push:
    tags:
      - v*

permissions:
  contents: read

jobs:
  prepare:
    name: Prepare release environment
    runs-on: ubuntu-latest
    steps:
      - run: env
  build-gui:
    name: Build gui
    needs: prepare
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            platform: windows/amd64
            output: GoinLoad.exe
          - os: macos-latest
            platform: darwin/universal
            output: GoinLoad
          - os: ubuntu-latest
            platform: linux/amd64
            output: GoinLoad-linux
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: dAppServer/wails-build-action@v2
        with:
          build-name: ${{ matrix.output }}
          build-platform: ${{ matrix.platform }}
          go-version: 1.22.x
          package: false
      - if: runner.os == 'macOS'
        shell: bash
        run: |
          rm -rf ./build/bin/${{ matrix.output }}.app.zip
          zip -q -r -j ./build/bin/${{matrix.output}}.app.zip ./build/bin/${{matrix.output}}.app
          rm -rf ./build/bin/${{ matrix.output }}.app

      - uses: actions/upload-artifact@v2
        with:
          name: target
          path: build/bin/*

  collect-release:
    name: Collect and release
    needs: [build-gui]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v3
        with:
          name: target
          path: target
      - working-directory: target
        run: |
          ls -al target && ls -R target/
          rm -rf GoinLoad-amd64-installer.exe
          rm -rf GoinLoad.pkg
          mv GoinLoad.app.zip GoinLoad-darwin.app.zip
      - run: ls -al target && ls -R target/ && file target/
      - uses: actions/upload-artifact@v3
        with:
          name: target-release
          path: target/*

      # release assets
      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/*
